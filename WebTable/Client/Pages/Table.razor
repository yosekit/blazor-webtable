@inject ITableService<TableColumn> tableColumnService
@inject ITableService<TableRow> tableRowService
@inject ITableService<TableItem> tableItemService
@inject ITableService<TableColumnType> tableColumnTypeService
@inject IJSRuntime JS
@page "/table"

<PageTitle>Table - демонстрация таблицы</PageTitle>

<h1 class="webtable-title">Table - демонстрация таблицы</h1>

<div class="webtable-wrapper">
	<div class="d-flex webtable-table">
		<div class="position-relative">
			<div class="webtable-scroller">
				<div class="webtable-table-view">

						@if (Columns is null)
						{
							<p><em>Loading columns ...</em></p>
						}
						else
						{
							<div class="d-flex position-absolute webtable-columns">
								<div class="d-inline-flex m-0">
									@foreach (var column in Columns)
									{
										string columnLabel = "column" + column.Id;

										<div class="d-flex dropdown">
											<div class="d-flex" type="button" id="@columnLabel" data-bs-toggle="dropdown" aria-expanded="false">
												<div class="d-flex position-relative">
													<div class="d-flex webtable-columns-column">
														<div class="d-flex webtable-focusable webtable-columns-column-header">
															<div class="d-flex webtable-columns-column-content">
																<div class="webtable-columns-column-content-icon">
																	<span class="oi oi-@(ColumnIconsMap[column.TypeId])" aria-hidden="true"></span>
																</div>
																<div class="webtable-columns-column-content-name">@column.Name</div>
															</div>
														</div>
													</div>
												</div>
											</div>

											<ul class="dropdown-menu" aria-labelledby="@columnLabel">
												<li type="button" data-bs-toggle="modal" data-bs-target="#columnEditModal" @onclick="(() => MapEditedColumn(column))">
													<span class="dropdown-item">Edit</span>
												</li>
												<li type="button" @onclick="(() => DeleteColumn(column.Id))">
													<span class="dropdown-item">Delete</span>
												</li>
											</ul>
										</div>
									}
								</div>
								<div class="d-flex webtable-focusable webtable-add-column" type="button" @onclick=AddColumn>
									<span class="oi oi-plus" aria-hidden="true"></span>
								</div>
							</div>

							<div style="height: 34px;"></div>

							<div class="modal fade" id="columnEditModal" tabindex="-1" aria-hidden="true">
								<div class="modal-dialog modal-dialog-centered">
									<div class="modal-content">
										<div class="modal-header">
											<h5 class="modal-title">Edit column</h5>
											<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
										</div>
										<div class="modal-body">
											<EditForm Model="@EditedColumn" OnSubmit="@EditColumn">
												<div class="mb-3">
													<InputText class="form-control" @bind-Value="EditedColumn.Name"></InputText>
												</div>
												<div class="mb-3">
													<label for="forSelectColumnType" class="form-label">Type:</label>
													<InputSelect @bind-Value="EditedColumn.TypeId" class="form-control">
														@if (ColumnTypes is not null)
														{
															foreach (var columnType in ColumnTypes)
															{
															<option value="@columnType.Id.ToString()">@columnType.Name</option>
															}
														}
												</InputSelect>
											</div>
											<div class="modal-footer">
												<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
												<button type="submit" class="btn btn-primary">Save changes</button>
											</div>
										</EditForm>
									</div>
								</div>
							</div>
						</div>
						}

						@if (Rows is not null && Columns is not null)
						{
							<div class="d-flex flex-column webtable-rows">
								@foreach (var row in Rows)
								{
									<div class="d-flex webtable-selectable webtable-rows-row">
										<div class="d-flex position-absolute webtable-focusable webtable-row-actions-delete" type="button" 
										@onclick="(() => DeleteRow(row.Id))">
											<span class="oi oi-x" aria-hidden="true"></span>
										</div>

										@foreach (var column in Columns)
										{
											var item = GetTableItem(row, column);

											<div class="d-flex" @onclick="(() => MapEditedItemAsync(item, Rows.IndexOf(row) + 1, Columns.IndexOf(column)))">
												<div class="webtable-item">
													<span class="webtable-item-content">@item.Content</span>
												</div>
											</div>
										}
									</div>
								}
							</div>
						}

						<div class="position-absolute webtable-edit-item">
							<EditForm Model="@EditedItem" OnSubmit="@EditItem" id="tableItemEditorForm" class="d-none">
								<InputText class="form-control" @bind-Value="EditedItem.Content" id="tableItemEditorInput"></InputText>
							</EditForm>
						</div>

						<div class="d-flex webtable-focusable webtable-add-row" type="button" @onclick=AddRow>
							<div class="webtable-add-row-icon"></div>
							<span class="webtable-add-row-text">New</span>
						</div>

				</div>
			</div>
		</div>
	</div>
</div>

@code {
	public Dictionary<TableColumnTypeId, string> ColumnIconsMap { get; } = new()
	{
		{ TableColumnTypeId.Text, "align-left"},
		{ TableColumnTypeId.Number, "calculator"},
		{ TableColumnTypeId.Date, "clock"},
	};
}